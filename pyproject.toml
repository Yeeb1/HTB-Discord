[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "htb-discord"
version = "2.0.0"
description = "HackTheBox Discord Integration Service"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "HTB Discord Team"}
]
keywords = ["discord", "hackthebox", "bot", "integration"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]

dependencies = [
    "discord.py>=2.3.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/Yeeb1/HTB-Discord"
Repository = "https://github.com/Yeeb1/HTB-Discord"
Issues = "https://github.com/Yeeb1/HTB-Discord/issues"

[project.scripts]
htb-discord = "htb_discord.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/htb_discord"]

[tool.hatch.envs.default]
dependencies = [
    "discord.py>=2.3.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "aiohttp>=3.9.0",
    "pyyaml>=6.0",
]

[tool.hatch.envs.dev]
dependencies = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pre-commit>=3.5.0",
]

[tool.black]
line-length = 100
target-version = ["py311"]
extend-exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | data
    | logs
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = [
    "data",
    "logs",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "discord.*",
    "aiohttp.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]